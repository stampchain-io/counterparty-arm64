# AWS Configuration Variables
# Copy this file to .env and fill in your values

# VPC and Subnet Configuration
# Replace with your actual VPC and subnet IDs
AWS_VPC_ID=vpc-xxxxxxxxxxxxxxxxx
AWS_SUBNET_ID=subnet-xxxxxxxxxxxxxxxxx

# Security Group Configuration
# Set USE_EXISTING_SG=true to use an existing security group, false to create a new one
USE_EXISTING_SG=false
# Only needed if USE_EXISTING_SG=true
EXISTING_SECURITY_GROUP_ID=sg-xxxxxxxxxxxxxxxxx
# Set to true to allow public access to the Counterparty RPC API (port 4000)
# Warning: Setting this to true opens your RPC to public access - use with caution
PUBLIC_RPC_ACCESS=false

# EC2 Instance Configuration
# Replace with your SSH key pair name
AWS_KEY_NAME=your-key-name
AWS_INSTANCE_TYPE=m7g.xlarge
AWS_REGION=us-east-1

# Volume Configuration
ROOT_VOLUME_SIZE=100
DATA_VOLUME_SIZE=1000

# Counterparty Configuration
BITCOIN_VERSION=26.0
COUNTERPARTY_BRANCH=master
COUNTERPARTY_TAG=
# Default network profile (options: mainnet, testnet3, testnet4, regtest)
NETWORK_PROFILE=mainnet

# GitHub Configuration
# Personal access token for private repository access (leave empty for public repos)
GITHUB_TOKEN=

# Docker Hub Configuration
DOCKERHUB_USERNAME=youruser
DOCKERHUB_TOKEN=your_docker_hub_token
DOCKERHUB_IMAGE_BITCOIND=youruser/bitcoind-arm64
DOCKERHUB_IMAGE_COUNTERPARTY=youruser/counterparty-core-arm64

# Ubuntu Configuration
UBUNTU_VERSION=24.04  # Options: 24.04, 22.04

# Docker Configuration
# Data directory used for all container data 
COUNTERPARTY_DOCKER_DATA=/bitcoin-data
# Repository directory for Counterparty Core
COUNTERPARTY_REPO=/bitcoin-data/repo/counterparty-core